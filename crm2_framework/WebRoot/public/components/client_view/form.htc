<component tagname="form">

<attach event="ondocumentready" onevent="documentready()" />

<property name="skipRebuild" value="false"/>
<property name="labelAlign" value="right" />

<property name="extra" value="autoform" />
<property name="type" value="table" />

<property name="submit" value="" />
<script>
	function documentready(){	
	    var form = document.createElement("FORM");
	    element.insertAdjacentElement("afterEnd", form);	    
		
		if(element.type=="table"){
			form.className = "formLayout3";
		}
		else{
			form.className = "formLayout2";
		}
		form.dataset = element.dataset;
		form.fields = element.fields;
		form.skipRebuild = element.skipRebuild;
		form.labelAlign = element.labelAlign;
		form.inputLayout = element.inputLayout;
		form.labelLayout = element.labelLayout;
		form.extra = element.extra;
		form.type = element.type;
		form.submit = element.submit;
		
		form.style.margin = "0";
		form.style.padding = "0";
				
  		makeAutoForm(form);	
  		Form.initial(form.id);
		element.outerHTML = "";	 		
	}

function makeAutoForm(autoform)
{
  if(!System.isTrue(autoform.skipRebuild)){
		var dataset;

		var _dataset= autoform.getAttribute("dataset");

		if (typeof(_dataset)=="string"){
			dataset=Dataset.getDatasetByID(_dataset);
		}
		else{
			dataset=_dataset;
		}
		
		if(dataset){
		  if(!autoform.id || autoform.id==""){
		    autoform.id = "form_"+dataset.id;
		  }			 
		  
		  while(autoform.hasChildNodes()){
		    autoform.removeChild(autoform.children[0]);
		  }
		  
		  if(autoform.fields && autoform.fields!=""){
		    var fields = autoform.fields.split(",");
		    for(var i=0; i<fields.length; i++){
		      var field = dataset.getField(System.trimStr(fields[i]));
		      if(field && field.visible){
		        createControlByField(autoform, dataset, field);
		      }
		    }
		  }else{
			for(var i=0; i<dataset.fields.fieldCount; i++){
			  var field = dataset.fields[i];
			  if(field && field.visible){
                createControlByField(autoform, dataset, field);
              }
            }
	      }
	      autoform.needRefresh = false;
	      if(dataset.getFirstRecord()){
	        dataset.refreshControls();
	        oldDataset[oldDataset.length] = dataset.id;
	      }
		}		 
  } 
  
  FormLayout.makeFormLayout(autoform);
	
}

function createControlByField(autoform, dataset, field){
  var label = autoform.appendChild(window.document.createElement("LABEL"));
  if(field.popup && field.popup!="" && autoform.type!="table"){
    var button = label.appendChild(window.document.createElement("BUTTON"));
    button.className = "coolButton";
    button.value = field.label;
    button.id = "button_"+dataset.id+"_"+field.name;
  }else{
	  label.className="fieldlabel";
	  label.dataset = dataset;
	  label.field = field.name;
	  label.id = "label_"+dataset.id+"_"+field.name;	
	  if(field.textarea=="true"){
	    label.htmlFor = "textarea_"+dataset.id+"_"+field.name;	
	  }else{
	    label.htmlFor = "text_"+dataset.id+"_"+field.name;
	  }
  }  
  if(field.labelLayout && field.labelLayout!=""){
    label.labelLayout = field.labelLayout;
  }
 
  
  if(field.textarea=="true"){
    var textarea = autoform.appendChild(window.document.createElement("TEXTAREA"));
	  textarea.className = "editor";
	  textarea.dataset = dataset;
	  textarea.field = field.name;
	  textarea.id = "textarea_"+dataset.id+"_"+field.name;	
	  
	  if(field.validType!="")
	    textarea.validType = field.validType;
	  if(field.validMsg!="")
	    textarea.msg = field.validMsg;	   
	    	  
	  if(field.textareaHeight && field.textareaHeight!=""){
	    textarea.style.height = field.textareaHeight;		 
	  }
	    
	  if(field.textareaLayout && field.textareaLayout!=""){
	    textarea.textareaLayout = field.textareaLayout;			
	  }	       
	  
	  textarea.extra = "editor";
	  initEditor(textarea);
	  
	  if(field.popup && field.popup!="" && autoform.type=="table"){
	    textarea.popup = field.popup;
	  }
	  if(field.keyField && field.keyField!="" && autoform.type=="table"){
	    textarea.keyField = field.keyField;
	  }		  
	  
	  if(dataset.readOnly || field.readOnly){
		textarea.style.color = "dimgray";
		textarea.style.backgroundColor = "#E5F3F8";
	  }
	  else{
		textarea.style.color = "black";
		textarea.style.backgroundColor = "";
	  }
	  
  }else{
	  var input = null;
	  if(field.password)
	    input = autoform.appendChild(window.document.createElement("<input type='password'/>"));
	  else
	    input = autoform.appendChild(window.document.createElement("<input type='text'/>"));

	  input.className = "editor";
	  input.dataset = dataset;
	  input.field = field.name;
	  input.id = "text_"+dataset.id+"_"+field.name;

	  if(field.validType!="")
	    input.validType = field.validType;
	  if(field.validMsg!="")
	    input.msg = field.validMsg;	

	  if(field.dropDown && field.dropDown!=""){
	    input.dropDown = field.dropDown;
	    input.readOnly = field.readOnly || field.dataset.readOnly;
	  }
	  if(field.inputLayout && field.inputLayout!=""){
	    input.inputLayout = field.inputLayout;				
	  }			  
	  
	  if(field.subList && field.subList!=""){
	    input.subList = "text_"+dataset.id+"_"+field.subList;
	  }
	  
	  input.extra = "editor";	  
	  initEditor(input);
	  
	  if(field.popup && field.popup!="" && autoform.type=="table"){
	    input.popup = field.popup;
	  }	
	  if(field.keyField && field.keyField!="" && autoform.type=="table"){
	    input.keyField = field.keyField;
	  }		    
	  
	  if(dataset.readOnly || field.readOnly){
		input.style.color = "dimgray";
		input.style.backgroundColor = "#E5F3F8";
	  }
	  else{
		input.style.color = "black";
		input.style.backgroundColor = "";
	  }	  
	}
}
	
	
</script>

</component>	