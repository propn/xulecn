#log4j中有五级logger 
#FATAL 0 
#ERROR 3 
#WARN 4 
#INFO 6 
#DEBUG 7 
#配置根Logger，其语法为：

#log4j.rootLogger = [ level ] , appenderName, appenderName, …
log4j.rootLogger=INFO,A1
#log4j.rootLogger=INFO
log4j.logger.com.ztesoft=INFO,A2
#log4j.logger.com.ztesoft=DEBUG,A1

#这一句设置以为着所有的log都输出
#如果为log4j.rootLogger=WARN, 则意味着只有WARN,ERROR,FATAL
#被输出，DEBUG,INFO将被屏蔽掉.
# A1 is set to be a ConsoleAppender. 
#log4j中Appender有几层如控制台、文件、GUI组件、甚至是套接口服务器、NT的事件记录器、UNIX Syslog守护进程等
#ConsoleAppender输出到控制台 
log4j.appender.A1=org.apache.log4j.ConsoleAppender 
# A1 使用的输出布局，其中log4j提供4种布局. org.apache.log4j.HTMLLayout（以HTML表格形式布局）
#org.apache.log4j.PatternLayout（可以灵活地指定布局模式），
#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）

log4j.appender.A1.layout=org.apache.log4j.PatternLayout 
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout 
#d 时间 .... 
log4j.appender.A1.layout.ConversionPattern=%-d{yyyy-MM-dd HH\:mm\:ss,SSS} [%c]-[%p] %m%n 

log4j.appender.A2=org.apache.log4j.RollingFileAppender
log4j.appender.A2.File=vsop.log
log4j.appender.A2.MaxFileSize=50000KB
log4j.appender.A2.MaxBackupIndex=20
log4j.appender.A2.layout=org.apache.log4j.PatternLayout
log4j.appender.A2.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss,SSS}] %l %-4r %-5p -- %m%n


